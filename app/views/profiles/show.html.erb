<div class="h-full bg-gray-100">
  <main class="mx-auto max-w-7xl pb-10 lg:px-8 lg:py-12">
    <div class="lg:grid lg:grid-cols-12 lg:gap-x-5">
      <%= render "profiles/sidebar" %>
      <!-- Payment details -->
      <div class="space-y-6 sm:px-6 lg:col-span-9 lg:px-0">
        <section aria-labelledby="payment-details-heading">
          <%= form_with model: @profile, url: profile_path(@profile) do |f| %>
            <div class="shadow sm:overflow-hidden sm:rounded-md">
              <div class="bg-white px-4 py-6 sm:p-6">
                <div>
                  <h2 id="payment-details-heading" class="text-lg font-medium leading-6 text-gray-900">Update profile</h2>
                  <p class="mt-1 text-sm text-gray-500">Update your profile information.</p>
                </div>

                <div class="mt-6 grid grid-cols-4 gap-6">
                  <div class="col-span-4 sm:col-span-2">
                    <%= f.label :first_name, class: "block text-sm font-medium leading-6 text-gray-900" %>
                    <%= f.text_field :first_name, class: "mt-2 block w-full rounded-md border-0 px-3 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-gray-900 sm:text-sm sm:leading-6" %>
                  </div>

                  <div class="col-span-4 sm:col-span-2">
                    <%= f.label :last_name, class: "block text-sm font-medium leading-6 text-gray-900" %>
                    <%= f.text_field :last_name, class: "mt-2 block w-full rounded-md border-0 px-3 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-gray-900 sm:text-sm sm:leading-6" %>
                  </div>

                  <div class="col-span-4 sm:col-span-4">
                    <div class="col-span-full">
                      <%# <%= f.label :avatar, class: "block text-sm font-medium leading-6 text-gray-900" %>
                      <div class="mt-2 flex items-center justify-around gap-x-3">
                        <% if @profile.avatar.attached? %>
                          <div class="relative" >
                            <div class="">
                                <div class="relative avatar-image-container">
                                  <div class=" w-full overflow-hidden rounded-lg  focus-within:ring-2 focus-within:ring-indigo-500 focus-within:ring-offset-2 focus-within:ring-offset-gray-100">
                                    <%= cl_image_tag @profile.avatar.key, class: " h-32 w-32 object-cover" %>
                                  </div>
                                    <button
                                      data-controller="avatar"
                                      data-action="click->avatar#show"
                                      class="mt-4 px-4 py-2 bg-indigo-600 text-white rounded"
                                    >
                                      View Avatar
                                    </button>
                                    <%= render "shared/modal",modal_trigger_id: "avatar-modal-trigger"  ,modal_content: "shared/partials/user_avatar", content_params: { profile: @profile } %>

                                </div>
                            </div>
                          </div>
                        <% else %>
                          <svg class="h-32 w-32 text-gray-300" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z" clip-rule="evenodd" />
                          </svg>
                        <% end %>
                        <%= f.file_field :avatar, class: "", id: "avatar-input" %>

                      </div>
                      <p id="fileCount" class="text-sm mt-3 font-medium text-indigo-600">No files selected</p>
                        <div id="fileList" class="mt-4"></div>
                    </div>
                  </div>
                </div>
                  </div>
              </div>
              <div class="bg-gray-50 px-4 py-3 text-right sm:px-6">
                <button type="submit" class="inline-flex justify-center rounded-md bg-gray-900 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-gray-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-900">Save</button>
              </div>
            </div>
          <% end %>
        </section>
      </div>
    </div>
  </main>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const fileInput = document.querySelector('input[type="file"]');
        const fileList = document.getElementById('fileList');
        const fileCountDisplay = document.getElementById('fileCount');

        fileInput.addEventListener('change', updateFileList);

        function updateFileList() {
            // Clear the current list
            fileList.innerHTML = "";

            // Update the file count display
            if (fileInput.files.length > 0) {
                fileCountDisplay.textContent = `${fileInput.files.length} files selected`;
            } else {
                fileCountDisplay.textContent = 'No files selected';
            }

            // For each file, append a list item and a delete button
            for (let i = 0; i < fileInput.files.length; i++) {
                const file = fileInput.files[i];
                const listItem = document.createElement('div');
                listItem.classList.add("flex", "items-center", "justify-between", "bg-gray-100", "rounded-md", "px-3", "py-2", "text-sm", "font-semibold", "text-gray-900", "shadow-sm", "hover:bg-gray-200", "focus-visible:outline", "focus-visible:outline-2", "focus-visible:outline-offset-2", "focus-visible:outline-indigo-600");
                listItem.textContent = file.name;

                const deleteButton = document.createElement('button');
                deleteButton.classList.add("text-red-500", "focus-visible:outline", "focus-visible:outline-2", "focus-visible:outline-offset-2", "focus-visible:outline-indigo-600");
                deleteButton.textContent = 'Delete';
                deleteButton.addEventListener('click', function() {
                    removeFile(i);
                });

                listItem.appendChild(deleteButton);
                fileList.appendChild(listItem);
            }
        }

        function removeFile(index) {
            const filesArray = Array.from(fileInput.files);
            filesArray.splice(index, 1);

            const newFileList = new DataTransfer();
            filesArray.forEach(file => {
                newFileList.items.add(file);
            });

            fileInput.files = newFileList.files;
            updateFileList();
        }
    });

</script>
